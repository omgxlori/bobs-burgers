/* tslint:disable */
/* eslint-disable */
/**
 * Menu API
 * Burger menu API docs
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Menu
 */
export interface Menu {
    /**
     * 
     * @type {number}
     * @memberof Menu
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Menu
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Menu
     */
    price: string;
    /**
     * 
     * @type {string}
     * @memberof Menu
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Menu
     */
    category?: MenuCategoryEnum;
}


/**
 * @export
 */
export const MenuCategoryEnum = {
    BurgerOfTheDay: 'burger of the day',
    Burger: 'burger',
    Topping: 'topping',
    Side: 'side',
    SpecialtyBurger: 'specialty_burger',
    Drink: 'drink'
} as const;
export type MenuCategoryEnum = typeof MenuCategoryEnum[keyof typeof MenuCategoryEnum];


/**
 * Check if a given object implements the Menu interface.
 */
export function instanceOfMenu(value: object): value is Menu {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    return true;
}

export function MenuFromJSON(json: any): Menu {
    return MenuFromJSONTyped(json, false);
}

export function MenuFromJSONTyped(json: any, ignoreDiscriminator: boolean): Menu {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'price': json['price'],
        'description': json['description'] == null ? undefined : json['description'],
        'category': json['category'] == null ? undefined : json['category'],
    };
}

export function MenuToJSON(json: any): Menu {
    return MenuToJSONTyped(json, false);
}

export function MenuToJSONTyped(value?: Omit<Menu, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'price': value['price'],
        'description': value['description'],
        'category': value['category'],
    };
}

